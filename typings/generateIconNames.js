const fs = require('fs');
const path = require('path');
// Reads all svg names from src/icons and writes them to
// an IconNames array and type alias in src/icons/index.ts
module.exports = function generateIconNames () {
    const iconDir = path.resolve(__dirname, 'src', 'core', 'Components', 'Icon');
    const files = fs.readdirSync(iconDir);
    const iconNames = files
        .filter(filename => filename.indexOf('.svg') > -1)
        .map(fileName => '\'' + fileName.split('.svg')[0] + '\'');
    const content = '// DO NOT EDIT THIS FILE. It is generated from the contents of src/icons.\n' +
    `export type IconNames = ${iconNames.join(' | ')}\n`;
    const indexFile = fs.readFileSync(path.resolve(iconDir, 'index.ts'), 'utf8');
    // Do not write to the file unless it's out of date
    // or webpack will get in a compilation loop
    if (content !== indexFile) {
        fs.writeFile(path.resolve(`${iconDir}`, 'index.ts'), content, function (err) {
            if (err) {
                return console.error(err);
            }
            console.log('Updated src/core/components/Icon/index.ts');
        });
    }
};